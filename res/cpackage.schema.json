{
	"$schema": "https://json-schema.org/draft/2020-12/schema",
	"$id": "https://raw.githubusercontent.com/PoetaKodu/cpp-pkg/main/res/cpackage.schema.json",
	"type": [ "object", "array" ],
	"minItems": 1,
	"items": { "$ref": "#/definitions/project" },
	"properties": {
		"name": {
			"type": "string",
			"minLength": 1,
			"description": "Name of the workspace. First project's name will be used if not specified."
		},
		"projects": {
			"type": "array",
			"description": "List of projects belonging to the workspace",
			"items": { "$ref": "#/definitions/project" }
		}
	},
	"additionalProperties": true,
	"required": ["projects"],
	"definitions": {
		"project": {
			"type": "object",
			"additionalProperties": true,
			"properties": {
				"name": {
					"type": "string",
					"minLength": 1,
					"description": "Name of the project. Use only characters allowed in file names."
				},
				"type": {
					"type": "string",
					"description": "Type of the project (causes different build results)",
					"oneOf": [
						{"enum": ["app"], 			"title": "An executable application (EXE on Windows systems)."},
						{"enum": ["static lib"], 	"title": "A library that is compiled into binaries while linking (integrated into one file, bigger file sizes)."},
						{"enum": ["shared lib"], 	"title": "A standalone library (sharable between binaries)."},
						{"enum": ["interface"], 	"title": "A project that doesn't result in a binary itself, instead it provides configuration to other projects."}
					]
				},
				"language": {
					"type": "string",
					"description": "Language version (default: C++17)",
					"oneOf": [
						{"enum": ["C++98"], 		"title": "C++ (standard: C++98)"},
						{"enum": ["C++11"], 		"title": "C++ (standard: C++11)"},
						{"enum": ["C++14"], 		"title": "C++ (standard: C++14)"},
						{"enum": ["C++17"], 		"title": "C++ (standard: C++17)"}
					]
				},
				"files": {
					"$ref": "#/definitions/stringOrVec",
					"description": "Files that this project uses.\nEither a single file, a file pattern or array of files/file patterns.\nA file pattern uses asterisk as a wildcard, f.e.: \"src/*.cpp\".\nA double wildcard will search subfolders too: \"src/**.cpp\""
				},
				"linkedLibraries": {
					"$ref": "#/definitions/stringOrVecAcc",
					"description": "Library dependencies of this project.\nThis is a structure of three values: public, private and interface.\nWhen using string or array to define this field, values will be considered as public."
				},
				"includeFolders": {
					"$ref": "#/definitions/stringOrVecAcc",
					"description": "Folders used by the compiler to locate project files.\nThis is a structure of three values: public, private and interface.\nWhen using string or array to define this field, values will be considered as public."
				},
				"linkerFolders": {
					"$ref": "#/definitions/stringOrVecAcc",
					"description": "Folders used by the linker to locate library dependencies.\nThis is a structure of three values: public, private and interface.\nWhen using string or array to define this field, values will be considered as public."
				}
			},
			"required": [ "name", "type" ]
		},
		"stringOrVec": {
			"type": [ "string", "array" ],
			"minLength": 1,
			"items": {
				"type": "string",
				"minLength": 1
			}
		},
		"stringOrVecAcc": {
			"type": [ "object", "string", "array" ],
			"minLength": 1,
			"items": {
				"type": "string",
				"minLength": 1
			},
			"properties": {
				"public": {
					"$ref": "#/definitions/stringOrVec",
					"decription": "Values used by the current project and propagated to projects that use it as a dependency."
				},
				"private": {
					"$ref": "#/definitions/stringOrVec",
					"decription": "Values used by the current project only."
				},
				"interface": {
					"$ref": "#/definitions/stringOrVec",
					"decription": "Values propagated to projects that use the current project as a dependency."
				}
			}
		}
	}
}